<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:american-flights-api-saito="http://www.mulesoft.org/schema/mule/american-flights-api-saito" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-api-saito http://www.mulesoft.org/schema/mule/american-flights-api-saito/current/mule-american-flights-api-saito.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlights" doc:id="b5e59256-876e-4562-95c9-4d23542354d9" >
		<http:listener doc:name="GET /flights" doc:id="ba500a79-6ae0-417a-a261-5fc4d46a484e" config-ref="HTTP_Listener_config" path="/flights" allowedMethods="GET" />
		<set-variable value="#[attributes.queryParams.airline]" doc:name="airline" doc:id="e7a2668d-d54e-41e7-8bd6-8772257fc431" variableName="airline"/>
		<flow-ref doc:name="setCode" doc:id="f0d8ee30-ed30-469d-b198-18df74a16eec" name="setCode"/>
		<validation:is-true doc:name="Is valid destination" doc:id="8622f007-2125-443c-b3af-94fd7cd5688f" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code]" message="#['Invalid destination' ++ ' ' ++ (vars.code default ' ')]"/>
		<choice doc:name="Choice" doc:id="10c8da90-bbf8-4ab3-8dc5-c76878a0f80a" >
			<when expression='#[vars.airline == "american"]'>
				<flow-ref doc:name="getAmericanFlights" doc:id="7e6fcea8-ea3f-49b3-84c5-69d743b92a7d" name="getAmericanFlights"/>
			</when>
			<when expression='#[vars.airline == "united"]'>
				<flow-ref doc:name="getUnitedFlights" doc:id="8bdcdbcb-8065-4a6c-91c4-2fc801f7aaed" name="getUnitedFlights"/>
			</when>
			<when expression='#[vars.airline == "delta"]'>
				<flow-ref doc:name="getDeltaFlights" doc:id="1f4b7c38-87cf-4d01-b1de-49ecbfd56b50" name="getDeltaFlights"/>
			</when>
			<otherwise>
				<flow-ref doc:name="getAllAirlineFlights" doc:id="a66b134d-205c-4126-8d58-165bcff2c5ce" name="getAllAirlineFlights" />
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flight] to JSON" doc:id="ae013e95-3ac8-4295-a863-7e8b9890034b">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="70c16dd6-a90a-48df-8341-5d89bbea5737" />
	</flow>
	<flow name="getAllAirlineFlights" doc:id="44e95130-7355-407f-9251-8eb68fb7d654" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="cad24102-c1f2-4ae1-9c22-99e8264c8a64" >
			<route >
				<flow-ref doc:name="getAmericanFlights" doc:id="91e3df10-a174-4949-920b-1853bcef58e6" name="getAmericanFlights"/>
			</route>
			<route >
				<flow-ref doc:name="getUnitedFlights" doc:id="f7e28904-2011-4617-9c54-786223b9cb1f" name="getUnitedFlights"/>
			</route>
			<route >
				<flow-ref doc:name="Flow Reference" doc:id="53869b72-b301-48d5-8460-89e6dcc06d95" name="getDeltaFlights"/>
			</route>
		</scatter-gather>
		<ee:transform doc:name="flatten to [Flight]" doc:id="2cfd7cdd-0cff-460c-82a3-2293bdfa3bd1">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="24c0888c-8b97-4227-a2d8-630c151bd62f" />
	</flow>
	<sub-flow name="setCode" doc:id="63069b67-5ee7-4e3f-b609-0ad326775a3b" >
		<set-variable value="#[attributes.queryParams.code]" doc:name="code" doc:id="62151273-d626-47ed-b95d-281b1e994e04" variableName="code"/>
	</sub-flow>
	<flow name="getAmericanFlights" doc:id="d3550220-d029-4eda-bb54-8dc8e1b607c3" >
		<american-flights-api-saito:get-flights doc:name="Get flights" doc:id="fc8e29d8-289a-442e-9e8e-53bf5032aa28" config-ref="American_Flights_API_Saito_Config" client-id="${american.client_id}" client-secret="${american.client_secret}" destination="#[vars.code]"/>
		<ee:transform doc:name="JSON to [Flight]" doc:id="bb5cf943-ba0c-4438-942c-be1a6d72c06b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="82af69aa-b581-41dc-aeb2-805aee7dd328" />
	</flow>
	<flow name="getUnitedFlights" doc:id="c2d7ca40-5d34-4954-8eb1-61242f1e226c" >
		<http:request method="GET" doc:name="GET flights" doc:id="7e6aebd9-28e3-4f2b-90f3-0f90e6dc3901" config-ref="HTTP_Request_confing_training" path="/united/flights/{dest}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"dest" : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="JSON to [Flight]" doc:id="b6864367-f062-4885-9939-33796e40572b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="9f16fb52-f1c5-44e5-8139-b1144ce51680" />
	</flow>
	<flow name="getDeltaFlights" doc:id="e08f3cae-b48e-46f9-9bcd-bba0b1ad6be2" >
		<ee:transform doc:name="Pass Code" doc:id="3d075bd7-57c5-4bfd-bd4a-4428bc159ea6" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code as String
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume operation="findFlight" doc:name="GET flights" doc:id="75e64133-29bb-439a-984f-acab7d09f130" config-ref="Delta_Web_Service_Consumer_Config"/>
		<ee:transform doc:name="SOAP to [Flight]" doc:id="129683b9-b2a7-411d-a7ed-df96a18c2d51" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="59025263-a0bb-4771-b9d0-34171d79639f" />
	</flow>
</mule>
